# Main config file for the service.

service: photato
frameworkVersion: "=1.31.0" # Pin to current Serverless version to make sure it works later too

plugins:
  - serverless-domain-manager
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10 # Pin to this Node version to make sure it works later
  stage: ${opt:stage, 'development'} # Default to development
  region: us-east-1 # Only this one works properly, they say

# TODO: I don't get this part yet
# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  app:
    handler: index.photatoApp
    memorySize: 256 # optional, in MB, default is 1024
    timeout: 5 # optional, in seconds, default is 6
    reservedConcurrency: 5 # optional reserved concurrency limit, default is the account concurrency limit
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

# serverless-domain-manager settings, to have a nice URL.
custom:
  domains:
    production: photato.eu
    development: development.photato.eu

  customDomain:
    basePath: ''
    domainName: ${self:custom.domains.${self:provider.stage}}
    stage: ${self:provider.stage}
    certificateName: '*.photato.eu'
    createRoute53Record: true
